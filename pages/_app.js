import '../styles/globals.scss'
import { Provider } from 'react-redux';
import store from '../store';
import { PersistGate } from 'redux-persist/integration/react';
import { persistStore } from 'redux-persist';
import { SessionProvider } from "next-auth/react"
import Head from 'next/head';
import { ToastContainer } from 'react-toastify';
import "react-toastify/dist/ReactToastify.css";

let persistor = persistStore(store);

function MyApp({ Component, pageProps: { session, ...pageProps } }) {
  return (
    <>
      <Head>
        <title>
          –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω PLUM: –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–æ–≥–æ
          –æ–Ω–ª–∞–π–Ω-–≥—ñ–ø–µ—Ä–º–∞—Ä–∫–µ—Ç—É –≤ –£–∫—Ä–∞—ó–Ω—ñ
        </title>
        <meta
          name="description"
          content="–Ü–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω PLUM: –µ–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞, –æ–¥—è–≥ —ñ –≤–∑—É—Ç—Ç—è, –ø–æ–±—É—Ç–æ–≤–∞ —Ç–µ—Ö–Ω—ñ–∫–∞, –∞–≤—Ç–æ—Ç–æ–≤–∞—Ä–∏, —Ç–æ–≤–∞—Ä–∏ –¥–ª—è –¥–æ–º—É —Ç–∞ –±—ñ–∑–Ω–µ—Å—É. –ö—É–ø—É–π—Ç–µ –≤ PLUM! ‚úì –û—Ñ—ñ—Ü—ñ–π–Ω–∞ –≥–∞—Ä–∞–Ω—Ç—ñ—è ‚úì –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ üöö ‚úì –í—ñ–¥–≥—É–∫–∏ –ø–æ–∫—É–ø—Ü—ñ–≤, –æ–≥–ª—è–¥–∏ —ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä—ñ–≤ $ –í–∏–≥—ñ–¥–Ω—ñ —Ü—ñ–Ω–∏ —Ç–∞ –∑–Ω–∏–∂–∫–∏ %"
        />
        <link rel="icon" href="/favicon.ico" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
          href="https://fonts.googleapis.com/css2?family=Noto+Sans&display=swap"
          rel="stylesheet"
        />
      </Head>

      <SessionProvider session={session}>
        <Provider store={store}>
          <PersistGate loading={null} persistor={persistor}>
            <ToastContainer
              position="bottom-center"
              autoClose={5000}
              hideProgressBar={false}
              newestOnTop={false}
              closeOnClick
              rtl={false}
              pauseOnFocusLoss
              draggable
              pauseOnHover
              theme="light"
            />
            <Component {...pageProps} />
          </PersistGate>
        </Provider>
      </SessionProvider>
    </>
  );

}
// MyApp.propTypes = {
//   Component: PropTypes.elementType.isRequired,
//   pageProps: PropTypes.object.isRequired,
// };
export default MyApp;

// export async function getServerSideProps(context) {
//   const { req, query } = context;
//   const session = await getSession({req});
//   const { callbackUrl } = query;
//   const countryData = await getCountryData();
//   if (session) {
//       return {
//           redirect: {
//               destination: callbackUrl,
//           },
//       };
//   };
//   const csrfToken = await getCsrfToken(context);
//   const providers = Object.values(await getProviders());
 
//   return {
//     pageProps: { providers, csrfToken, callbackUrl, country:countryData },
     
//   };
// }